# Generated by Django 4.2.7 on 2023-11-14 00:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('agent_id', models.IntegerField(primary_key=True, serialize=False)),
                ('create_datetime', models.DateTimeField(blank=True, null=True)),
                ('delete_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('buyer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('create_datetime', models.DateTimeField(blank=True, null=True)),
                ('delete_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'buyer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('label_id', models.IntegerField(primary_key=True, serialize=False)),
                ('label', models.CharField(blank=True, max_length=50, null=True)),
                ('label_description', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'Label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('property_id', models.IntegerField(primary_key=True, serialize=False)),
                ('property_name', models.CharField(blank=True, max_length=30, null=True)),
                ('property_type', models.CharField(blank=True, max_length=30, null=True)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Propertyaddress',
            fields=[
                ('address_id', models.IntegerField(primary_key=True, serialize=False)),
                ('address1', models.CharField(blank=True, max_length=50, null=True)),
                ('address2', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=10, null=True)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'propertyAddress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Propertyitem',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('item_type', models.CharField(blank=True, max_length=50, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('item_bedroom', models.FloatField(blank=True, null=True)),
                ('item_bathroom', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'propertyItem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Propertyitemfeatures2',
            fields=[
                ('feature_id', models.IntegerField(primary_key=True, serialize=False)),
                ('featutre_type', models.CharField(blank=True, max_length=50, null=True)),
                ('feature_name', models.CharField(blank=True, max_length=50, null=True)),
                ('feature_value', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'propertyItemFeatures2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Propertyitemimages',
            fields=[
                ('image_id', models.IntegerField(primary_key=True, serialize=False)),
                ('image', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'propertyItemImages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Salesman',
            fields=[
                ('salesman_id', models.IntegerField(primary_key=True, serialize=False)),
                ('create_datetime', models.DateTimeField(blank=True, null=True)),
                ('delete_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'salesman',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('store_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_name', models.CharField(blank=True, max_length=30, null=True)),
                ('store_region', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'store',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('transaction_id', models.IntegerField(primary_key=True, serialize=False)),
                ('transaction_datetime', models.DateTimeField(blank=True, null=True)),
                ('delete_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transactionsreview',
            fields=[
                ('review_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField()),
                ('review', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transactionsReview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Useraddress',
            fields=[
                ('address_id', models.IntegerField(primary_key=True, serialize=False)),
                ('address1', models.CharField(blank=True, max_length=50, null=True)),
                ('address2', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=10, null=True)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'userAddress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('organization_name', models.CharField(blank=True, max_length=150, null=True)),
                ('user_gender', models.CharField(blank=True, max_length=10, null=True)),
                ('user_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('user_email', models.CharField(blank=True, max_length=100, null=True)),
                ('user_account', models.CharField(blank=True, max_length=50, null=True)),
                ('passward', models.CharField(blank=True, max_length=50, null=True)),
                ('create_datetime', models.DateTimeField(blank=True, null=True)),
                ('delete_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('test_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('test_text', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'Test',
            },
        ),
        migrations.CreateModel(
            name='Propertyitemlabel',
            fields=[
                ('label', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='housebook_app.label')),
            ],
            options={
                'db_table': 'propertyItemLabel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Propertyitempayment',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='housebook_app.propertyitem')),
                ('payment_id', models.IntegerField()),
                ('payment_name', models.CharField(max_length=50)),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'propertyItemPayment',
                'managed': False,
            },
        ),
    ]
